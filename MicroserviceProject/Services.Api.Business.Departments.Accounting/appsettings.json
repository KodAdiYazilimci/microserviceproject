{
  "ApplicationName": "Services.Api.Business.Departments.Accounting",
  "Configuration": {
    "Authorization": {
      "Credential": {
        "email": "Services.Api.Business.Departments.Accounting@service.service",
        "password": "1234"
      },
      "Endpoints": {
        "GetToken": "authorization.auth.gettoken",
        "GetUser": "authorization.auth.getuser"
      }
    },
    "Localization": {
      "TranslationDbConnnectionString": "server=localhost;DataBase=Microservice_Localization_DB;user=sa;password=Srkn_CMR*1987;MultipleActiveResultSets=true",
      "DefaultRegion": "tr-TR",
      "CacheKey": "localization.translations"
    },
    "Logging": {
      "RequestResponseLogging": {
        "FileConfiguration": {
          "Path": "C:\\Logs\\Services.Api.Business.Departments.Accounting\\",
          "FileName": "RequestResponseLog",
          "Encoding": "UTF-8"
        },
        "RabbitConfiguration": {
          "Host": "localhost",
          "UserName": "guest",
          "Password": "guest",
          "QueueName": "RequestResponseLogs"
        },
        "DataBaseConfiguration": {
          "DataSource": "server=localhost;DataBase=Microservice_Logs_DB;user=sa;password=Srkn_CMR*1987;MultipleActiveResultSets=true"
        },
        "MongoConfiguration": {
          "ConnectionString": "mongodb://localhost:27017",
          "DataBase": "Logs",
          "CollectionName": "RequestResponseLogs"
        }
      }
    },
    "Routing": {
      "DataSource": "server=localhost;DataBase=Microservice_Routing_DB;user=sa;password=Srkn_CMR*1987;MultipleActiveResultSets=true"
    },
    "RabbitQueues": {
      "Host": {
        "DefaultHost": "localhost",
        "DefaultUserName": "guest",
        "DefaultPassword": "guest"
      },
      "Services": {
        "Authorization": {
          "QueueNames": {
            "InformInvalidToken": "authorization.queue.identity.informinvalidtoken"
          }
        },
        "AA": {
          "QueueNames": {
            "AssignInventoryToWorker": "aa.queue.inventory.assignInventorytoworker",
            "InformInventoryRequest": "aa.queue.request.informinventoryrequest"
          }
        },
        "IT": {
          "QueueNames": {
            "AssignInventoryToWorker": "it.queue.inventory.assignInventorytoworker",
            "InformInventoryRequest": "it.queue.request.informinventoryrequest"
          }
        },
        "Accounting": {
          "QueueNames": {
            "CreateBankAccount": "accounting.queue.bankaccounts.createbankaccount"
          }
        },
        "Buying": {
          "QueueNames": {
            "CreateInventoryRequest": "buying.queue.request.createinventoryrequest",
            "NotifyCostApprovement": "buying.queue.cost.notifycostapprovement",
            "CreateProductRequest": "buying.queue.request.createproductrequest"
          }
        },
        "Finance": {
          "QueueNames": {
            "InventoryRequest": "finance.queue.request.inventoryrequest",
            "ProductionRequest": "finance.queue.request.productionrequest"
          }
        },
        "Production": {
          "QueueNames": {
            "Produce": "production.queue.product.produce"
          }
        },
        "Selling": {
          "QueueName": {
            "NotifyProductionRequestApprovement": "selling.queue.production.notifyproductionrequestapprovement"
          }
        },
        "Storage": {
          "QueueNames": {
            "DescendProductStock": "storage.queue.product.descendproductstock",
            "IncreaseProductStock": "storage.queue.product.increaseproductstock"
          }
        }
      }
    },
    "WebSockets": {
      "DataSource": "server=localhost;DataBase=Microservice_Socket_DB;user=sa;password=Srkn_CMR*1987;MultipleActiveResultSets=true"
    }
  },
  "Services": {
    "Endpoints": {
      "Accounting": {
        "CreateBankAccount": "accounting.bankaccounts.createbankaccount",
        "GetBankAccountsOfWorker": "accounting.bankaccounts.getbankaccountsofworker",
        "GetCurrencies": "accounting.bankaccounts.getcurrencies",
        "CreateCurrency": "accounting.bankaccounts.createcurrency",
        "RollbackTransaction": "accounting.transaction.rollbacktransaction",
        "GetSalaryPaymentsOfWorker": "accounting.bankaccounts.getsalarypaymentsofworker",
        "CreateSalaryPayment": "accounting.bankaccounts.createsalarypayment",
        "RemoveSessionIfExistsInCache": "accounting.identity.removesessionifexistsincache"
      },
      "HR": {
        "GetDepartments": "hr.department.getdepartments",
        "CreateDepartment": "hr.department.createdepartment",
        "GetPeople": "hr.person.getpeople",
        "CreatePerson": "hr.person.createperson",
        "GetTitles": "hr.person.gettitles",
        "CreateTitle": "hr.person.createtitle",
        "GetWorkers": "hr.person.getworkers",
        "CreateWorker": "hr.person.createworker",
        "GetCurrencies": "accounting.bankaccounts.getcurrencies",
        "CreateCurrency": "accounting.bankaccounts.createcurrency",
        "RemoveSessionIfExistsInCache": "hr.identity.removesessionifexistsincache"
      },
      "IT": {
        "GetInventories": "it.inventory.getinventories",
        "CreateInventory": "it.inventory.createinventory",
        "AssignInventoryToWorker": "it.inventory.assigninventorytoworker",
        "GetInventoriesForNewWorker": "it.inventory.getinventoriesfornewworker",
        "CreateDefaultInventoryForNewWorker": "it.inventory.createdefaultinventoryfornewworker",
        "InformInventoryRequest": "it.inventory.informinventoryrequest",
        "RemoveSessionIfExistsInCache": "it.identity.removesessionifexistsincache"
      },
      "AA": {
        "GetInventories": "aa.inventory.getinventories",
        "CreateInventory": "aa.inventory.createinventory",
        "AssignInventoryToWorker": "aa.inventory.assigninventorytoworker",
        "GetInventoriesForNewWorker": "aa.inventory.getinventoriesfornewworker",
        "CreateDefaultInventoryForNewWorker": "aa.inventory.createdefaultinventoryfornewworker",
        "InformInventoryRequest": "aa.inventory.informinventoryrequest",
        "RemoveSessionIfExistsInCache": "aa.identity.removesessionifexistsincache"
      },
      "Buying": {
        "GetInventoryRequests": "buying.request.getinventoryrequests",
        "CreateInventoryRequest": "buying.request.createinventoryrequest",
        "RollbackTransaction": "buying.transaction.rollbacktransaction",
        "ValidateCostInventory": "buying.request.validatecostinventory",
        "RemoveSessionIfExistsInCache": "buying.identity.removesessionifexistsincache"
      },
      "Finance": {
        "GetDecidedCosts": "finance.cost.getdecidedcosts",
        "CreateCost": "finance.cost.createcost",
        "DecideCost": "finance.cost.decidecost",
        "RemoveSessionIfExistsInCache": "finance.identity.removesessionifexistsincache"
      },
      "Selling": {
        "GetSolds": "selling.selling.getsolds",
        "CreateSelling": "selling.selling.createselling",
        "NotifyProductionRequest": "selling.selling.notifyproductionrequest",
        "RemoveSessionIfExistsInCache": "selling.identity.removesessionifexistsincache"
      },
      "CR": {
        "GetCustomers": "cr.customers.getcustomers",
        "CreateCustomer": "cr.customers.createcustomer",
        "RemoveSessionIfExistsInCache": "cr.identity.removesessionifexistsincache"
      },
      "Production": {
        "GetProducts": "production.product.getproducts",
        "CreateProduct": "production.product.createproduct",
        "ProduceProduct": "production.production.produceproduct",
        "ReEvaluateProduceProduct": "production.production.reevaluateproduceproduct",
        "RemoveSessionIfExistsInCache": "production.identity.removesessionifexistsincache"
      },
      "Storage": {
        "GetStock": "storage.stock.getstock",
        "CreateStock": "storage.stock.createstock",
        "DescendProductStock": "storage.stock.descendproductstock",
        "RemoveSessionIfExistsInCache": "storage.identity.removesessionifexistsincache"
      },
      "WebSocket.Security": {
        "SendTokenNotification": "websockets.security.sendtokennotification",
        "SendErrorNotification": "websockets.reliability.senderrornotification"
      }
    }
  },
  "Gateways": {
    "Endpoints": {
      "Public": {
        "HR": {
          "GetDepartments": "gateway.public.hr.getdepartments"
        },
        "Identity": {
          "RemoveSessionIfExistsInCache": "gateway.public.identity.removesessionifexistsincache"
        }
      }
    }
  },
  "Persistence": {
    "DataSource": "server=localhost;DataBase=Microservice_Accounting_DB;user=sa;password=Srkn_CMR*1987;MultipleActiveResultSets=true",
    "CacheServer": "localhost"
  }
}
